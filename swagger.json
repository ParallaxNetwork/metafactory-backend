{
	"openapi": "3.0.0",
	"info": {
		"title": "MetaFactory",
		"version": "1.0.0"
	},
	"paths": {
		"/user/register": {
			"post": {
				"tags": ["User"],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"id": {
										"type": "string",
										"example": "P-6HJ9_KckFGZhGP"
									},
									"name": {
										"type": "string",
										"example": "John Doe"
									},
									"wallet": {
										"type": "string",
										"example": "0xf7F7a9A695A1eb550396ED46E13253187c30013e"
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		},
		"/user/login": {
			"post": {
				"tags": ["User"],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"wallet": {
										"type": "string",
										"example": "0xf7F7a9A695A1eb550396ED46E13253187c30013e"
									},
									"signature": {
										"type": "string",
										"example": "0x9b668ab0daddb14467303430c2f8813e69a79cacc44b0dd926d9910ef9f4443c18611318be19f449bdf338153915a2fa61bc48bac41cb5385b74e01e5859f3cb1c"
									},
									"message": {
										"type": "string",
										"example": "localhost:3000 wants you to sign in with your Ethereum account:\n0xf7F7a9A695A1eb550396ED46E13253187c30013e\n\nSign in with Ethereum to the app.\n\nURI: http://localhost:3000\nVersion: 1\nChain ID: 1\nNonce: 3iUAwfC7rSQmocDiU\nIssued At: 2023-02-22T06:29:05.669Z"
									},
									"nonce": {
										"type": "string",
										"example": "3iUAwfC7rSQmocDiU"
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		},
		"/user/update": {
			"post": {
				"tags": ["User"],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"name": {
										"type": "string",
										"example": "John Doer"
									},
									"email": {
										"type": "string",
										"example": "john.doer@gmail.com"
									},
									"twitter": {
										"type": "string",
										"example": "johndoer"
									}
								}
							}
						}
					}
				},
				"security": [
					{
						"bearerAuth": []
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		},
		"/user/nonce": {
			"get": {
				"tags": ["User"],
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		},
		"/user/get": {
			"get": {
				"tags": ["User"],
				"parameters": [
					{
						"in": "query",
						"name": "id",
						"schema": { "type": "string" }
					},
					{
						"in": "query",
						"name": "name",
						"schema": { "type": "string" }
					},
					{
						"in": "query",
						"name": "wallet",
						"schema": { "type": "string" }
					}
				],
				"responses": {
					"200": { "description": "OK" }
				}
			}
		},

		"/file/upload": {
			"post": {
				"tags": ["File"],
				"requestBody": {
					"content": {
						"multipart/form-data": {
							"schema": {
								"type": "object",
								"properties": {
									"file": {
										"type": "string",
										"format": "binary"
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		},

		"/mail/send": {
			"post": {
				"tags": ["Mail"],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"to": {
										"type": "string",
										"example": "john.doe@gmail.com, jeniffer.doe@gmail.com"
									},
									"subject": {
										"type": "string",
										"example": "Mail subject"
									},
									"text": {
										"type": "string",
										"example": "Mail text"
									},
									"html": {
										"type": "string",
										"example": "<b>html example of sending email</b>"
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		},

		"/project/create": {
			"post": {
				"tags": ["Project"],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"name": {
										"type": "string",
										"example": "Project-1"
									},
									"thumbnail": { "type": "string" }
								}
							}
						}
					}
				},
				"security": [
					{
						"bearerAuth": []
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		},
		"/project/invite": {
			"post": {
				"tags": ["Project"],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"inviteCode": {
										"type": "string",
										"example": "ABCDEFGH"
									}
								}
							}
						}
					}
				},
				"security": [
					{
						"bearerAuth": []
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		},
		"/project/update": {
			"post": {
				"tags": ["Project"],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"id": {
										"type": "string",
										"example": "_WlAiE9kKTwTyYYVhs84Q"
									},
									"name": {
										"type": "string",
										"example": "Project-update-1.1"
									},
									"canvas": { "type": "string" },
									"roomId": { "type": "string" },
									"roomKey": { "type": "string" }
								}
							}
						}
					}
				},
				"security": [
					{
						"bearerAuth": []
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		},
		"/project/delete": {
			"post": {
				"tags": ["Project"],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"id": { "type": "string" }
								}
							}
						}
					}
				},
				"security": [
					{
						"bearerAuth": []
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		},
		"/project/get": {
			"get": {
				"tags": ["Project"],
				"parameters": [
					{
						"in": "query",
						"name": "id",
						"schema": { "type": "string" }
					},
					{
						"in": "query",
						"name": "name",
						"schema": { "type": "string" }
					},
					{
						"in": "query",
						"name": "inviteCode",
						"schema": { "type": "string" }
					},
					{
						"in": "query",
						"name": "createdBy",
						"schema": { "type": "string" }
					}
				],
				"security": [
					{
						"bearerAuth": []
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		},

		"/library/add": {
			"post": {
				"tags": ["Library"],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"projectId": { "type": "string" },
									"data": { "type": "string" }
								}
							}
						}
					}
				},
				"security": [
					{
						"bearerAuth": []
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		},
		"/library/update": {
			"post": {
				"tags": ["Library"],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"id": { "type": "string" },
									"projectId": { "type": "string" },
									"data": { "type": "string" }
								}
							}
						}
					}
				},
				"security": [
					{
						"bearerAuth": []
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		},
		"/library/delete": {
			"post": {
				"tags": ["Library"],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"id": { "type": "string" },
									"projectId": { "type": "string" }
								}
							}
						}
					}
				},
				"security": [
					{
						"bearerAuth": []
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		},
		"/library/get": {
			"get": {
				"tags": ["Library"],
				"parameters": [
					{
						"in": "query",
						"name": "id",
						"schema": { "type": "string" }
					},
					{
						"in": "query",
						"name": "projectId",
						"schema": { "type": "string" }
					}
				],
				"security": [
					{
						"bearerAuth": []
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		}
	},

	"components": {
		"schemas": {
			"User": {
				"type": "object",
				"properties": {
					"id": { "type": "string" },
					"name": { "type": "string" },
					"wallet": { "type": "string" },
					"email": { "type": "string" },
					"twitter": { "type": "string" },
					"isActive": { "type": "boolean" }
				}
			},
			"project": {
				"type": "object",
				"properties": {
					"id": { "type": "string" },
					"name": { "type": "string" },
					"inviteCode": { "type": "string" },
					"canvas": { "type": "string" },
					"thumbnail": { "type": "string" },
					"roomId": { "type": "string" },
					"roomKey": { "type": "string" },
					"createdBy": { "type": "string" },
					"isActive": { "type": "boolean" }
				}
			},
			"library": {
				"type": "object",
				"properties": {
					"id": { "type": "string" },
					"projectId": { "type": "string" },
					"data": { "type": "string" },
					"isActive": { "type": "boolean" }
				}
			}
		},
		"securitySchemes": {
			"bearerAuth": {
				"name": "authorization",
				"type": "http",
				"scheme": "bearer",
				"in": "header"
			}
		}
	}
}
